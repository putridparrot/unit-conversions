// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

export namespace Angle {
	export class Degrees {
		static toRadians(value: number): number {
			return value * Math.PI/180.0;
		}
		static toGradians(value: number): number {
			return value * 200.0/180.0;
		}
		static toMilliradians(value: number): number {
			return value * 17.4533;
		}
		static toMinuteOfArc(value: number): number {
			return value * 60.0;
		}
		static toSecondsOfArc(value: number): number {
			return value * 3600.0;
		}
	}

	export class Gradians {
		static toDegrees(value: number): number {
			return value * 180.0/200.0;
		}
		static toRadians(value: number): number {
			return value * Math.PI/200.0;
		}
		static toMilliradians(value: number): number {
			return value * 15.708;
		}
		static toMinuteOfArc(value: number): number {
			return value * 54.0;
		}
		static toSecondsOfArc(value: number): number {
			return value * 3240.0;
		}
	}

	export class Milliradians {
		static toDegrees(value: number): number {
			return value * 180.0/(1000.0 * Math.PI);
		}
		static toRadians(value: number): number {
			return value / 1000.0;
		}
		static toGradians(value: number): number {
			return value * 200.0/(1000.0 * Math.PI);
		}
		static toMinuteOfArc(value: number): number {
			return value * (60.0 * 180.0)/(1000.0 * Math.PI);
		}
		static toSecondsOfArc(value: number): number {
			return value * (3600.0 * 180.0)/(1000.0 * Math.PI);
		}
	}

	export class MinuteOfArc {
		static toDegrees(value: number): number {
			return value / 60.0;
		}
		static toRadians(value: number): number {
			return value * Math.PI/(60.0 * 180.0);
		}
		static toGradians(value: number): number {
			return value / 54.0;
		}
		static toMilliradians(value: number): number {
			return value * (1000.0 * Math.PI) / (60.0 * 180.0);
		}
		static toSecondsOfArc(value: number): number {
			return value * 60.0;
		}
	}

	export class Radians {
		static toDegrees(value: number): number {
			return value * 180.0/Math.PI;
		}
		static toGradians(value: number): number {
			return value * 200.0/Math.PI;
		}
		static toMilliradians(value: number): number {
			return value * 1000.0;
		}
		static toMinuteOfArc(value: number): number {
			return value * (60.0 * 180.0)/Math.PI;
		}
		static toSecondsOfArc(value: number): number {
			return value * (3600.0 * 180.0)/Math.PI;
		}
	}

	export class SecondsOfArc {
		static toDegrees(value: number): number {
			return value / 3600.0;
		}
		static toRadians(value: number): number {
			return value * Math.PI/(180.0 * 3600.0);
		}
		static toGradians(value: number): number {
			return value / 3240.0;
		}
		static toMilliradians(value: number): number {
			return value * (1000.0 * Math.PI) / (180.0 * 3600.0);
		}
		static toMinuteOfArc(value: number): number {
			return value / 60.0;
		}
	}
}
