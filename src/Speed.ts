// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

export namespace Speed {
	export class FeetPerSecond {
		static toMilesPerHour(value: number): number {
			return value / 1.46667;
		}
		static toKilometresPerHour(value: number): number {
			return value * 1.09728;
		}
		static toMetresPerSecond(value: number): number {
			return value / 3.28084;
		}
		static toKnots(value: number): number {
			return value / 1.68781;
		}
	}

	export class KilometresPerHour {
		static toMilesPerHour(value: number): number {
			return value / 1.60934;
		}
		static toFeetPerSecond(value: number): number {
			return value / 1.09728;
		}
		static toMetresPerSecond(value: number): number {
			return value / 3.6;
		}
		static toKnots(value: number): number {
			return value / 1.852;
		}
	}

	export class Knots {
		static toMilesPerHour(value: number): number {
			return value * 1.15078;
		}
		static toKilometresPerHour(value: number): number {
			return value * 1.852;
		}
		static toFeetPerSecond(value: number): number {
			return value * 1.68781;
		}
		static toMetresPerSecond(value: number): number {
			return value / 1.94384;
		}
	}

	export class MetresPerSecond {
		static toMilesPerHour(value: number): number {
			return value * 2.23694;
		}
		static toKilometresPerHour(value: number): number {
			return value * 3.6;
		}
		static toFeetPerSecond(value: number): number {
			return value * 3.28084;
		}
		static toKnots(value: number): number {
			return value * 1.94384;
		}
	}

	export class MilesPerHour {
		static toKilometresPerHour(value: number): number {
			return value * 1.60934;
		}
		static toFeetPerSecond(value: number): number {
			return value * 1.46667;
		}
		static toMetresPerSecond(value: number): number {
			return value / 2.23694;
		}
		static toKnots(value: number): number {
			return value / 1.15078;
		}
	}
}
