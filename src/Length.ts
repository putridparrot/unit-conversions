// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

export namespace Length {
	export class Centimetres {
		static toMillimetres(value: number): number {
			return value * 10.0;
		}
		static toMetres(value: number): number {
			return value / 100.0;
		}
		static toKilometres(value: number): number {
			return value / 100000.0;
		}
		static toInches(value: number): number {
			return value / 2.54;
		}
		static toFeet(value: number): number {
			return value / 30.48;
		}
		static toYards(value: number): number {
			return value / 91.44;
		}
		static toMiles(value: number): number {
			return value / 160934.4;
		}
		static toNauticalMiles(value: number): number {
			return value / 185200.0;
		}
	}

	export class Feet {
		static toMillimetres(value: number): number {
			return value * 304.8;
		}
		static toCentimetres(value: number): number {
			return value * 30.48;
		}
		static toMetres(value: number): number {
			return value * 0.3048;
		}
		static toKilometres(value: number): number {
			return value * 0.0003048;
		}
		static toInches(value: number): number {
			return value * 12.0;
		}
		static toYards(value: number): number {
			return value / 3.0;
		}
		static toMiles(value: number): number {
			return value / 5280.0;
		}
		static toNauticalMiles(value: number): number {
			return value / 6076.12;
		}
	}

	export class Inches {
		static toMillimetres(value: number): number {
			return value * 25.4;
		}
		static toCentimetres(value: number): number {
			return value * 2.54;
		}
		static toMetres(value: number): number {
			return value / 39.37007874;
		}
		static toKilometres(value: number): number {
			return value / 39370.07874;
		}
		static toFeet(value: number): number {
			return value / 12.0;
		}
		static toYards(value: number): number {
			return value / 36.0;
		}
		static toMiles(value: number): number {
			return value / 63360.0;
		}
		static toNauticalMiles(value: number): number {
			return value / 72913.4;
		}
	}

	export class Kilometres {
		static toMillimetres(value: number): number {
			return value * 1000000.0;
		}
		static toCentimetres(value: number): number {
			return value * 100000.0;
		}
		static toMetres(value: number): number {
			return value * 1000.0;
		}
		static toInches(value: number): number {
			return value * 39370.07874;
		}
		static toFeet(value: number): number {
			return value / 0.0003048;
		}
		static toYards(value: number): number {
			return value / 0.0009144;
		}
		static toMiles(value: number): number {
			return value / 1.609344;
		}
		static toNauticalMiles(value: number): number {
			return value / 1.85200;
		}
	}

	export class Metres {
		static toMillimetres(value: number): number {
			return value * 1000.0;
		}
		static toCentimetres(value: number): number {
			return value * 100.0;
		}
		static toKilometres(value: number): number {
			return value / 1000.0;
		}
		static toInches(value: number): number {
			return value * 39.37007874;
		}
		static toFeet(value: number): number {
			return value / 0.3048;
		}
		static toYards(value: number): number {
			return value / 0.9144;
		}
		static toMiles(value: number): number {
			return value / 1609.344;
		}
		static toNauticalMiles(value: number): number {
			return value / 1852.0;
		}
	}

	export class Miles {
		static toMillimetres(value: number): number {
			return value * 1609344.0;
		}
		static toCentimetres(value: number): number {
			return value * 160934.4;
		}
		static toMetres(value: number): number {
			return value * 1609.344;
		}
		static toKilometres(value: number): number {
			return value * 1.609344;
		}
		static toInches(value: number): number {
			return value * 63360.0;
		}
		static toFeet(value: number): number {
			return value * 5280.0;
		}
		static toYards(value: number): number {
			return value * 1760.0;
		}
		static toNauticalMiles(value: number): number {
			return value / 1.15078;
		}
	}

	export class Millimetres {
		static toCentimetres(value: number): number {
			return value / 10.0;
		}
		static toMetres(value: number): number {
			return value / 1000.0;
		}
		static toKilometres(value: number): number {
			return value / 1000000.0;
		}
		static toInches(value: number): number {
			return value / 25.4;
		}
		static toFeet(value: number): number {
			return value / 304.8;
		}
		static toYards(value: number): number {
			return value / 914.4;
		}
		static toMiles(value: number): number {
			return value / 1609344.0;
		}
		static toNauticalMiles(value: number): number {
			return value / 1852000.0;
		}
	}

	export class NauticalMiles {
		static toMillimetres(value: number): number {
			return value * 1852000.0;
		}
		static toCentimetres(value: number): number {
			return value * 185200.0;
		}
		static toMetres(value: number): number {
			return value * 1852.0;
		}
		static toKilometres(value: number): number {
			return value * 1.85200;
		}
		static toInches(value: number): number {
			return value * 72913.4;
		}
		static toFeet(value: number): number {
			return value * 6076.12;
		}
		static toYards(value: number): number {
			return value * 2025.37;
		}
		static toMiles(value: number): number {
			return value * 1.15078;
		}
	}

	export class Yards {
		static toMillimetres(value: number): number {
			return value * 914.4;
		}
		static toCentimetres(value: number): number {
			return value * 91.44;
		}
		static toMetres(value: number): number {
			return value * 0.9144;
		}
		static toKilometres(value: number): number {
			return value * 0.0009144;
		}
		static toInches(value: number): number {
			return value * 36.0;
		}
		static toFeet(value: number): number {
			return value * 3.0;
		}
		static toMiles(value: number): number {
			return value / 1760.0;
		}
		static toNauticalMiles(value: number): number {
			return value / 2025.37;
		}
	}
}
