// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

import * as fc from 'fast-check';
import { Area } from '../src/Area';

it('From Acres to Square Kilometres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Acres.toSquareKilometres(value)
            const convertBack = Area.SquareKilometres.toAcres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Acres to Square Kilometres', () => {
    expect(Area.Acres.toSquareKilometres(100.0)).toBeCloseTo(0.404686, 1);
    expect(Area.Acres.toSquareKilometres(90.0)).toBeCloseTo(0.364217, 1);
    expect(Area.Acres.toSquareKilometres(1800.0)).toBeCloseTo(7.284342, 1);
});

it('From Acres to Square Metres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Acres.toSquareMetres(value)
            const convertBack = Area.SquareMetres.toAcres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Acres to Square Metres', () => {
    expect(Area.Acres.toSquareMetres(1.2)).toBeCloseTo(4856.23, 1);
    expect(Area.Acres.toSquareMetres(0.8)).toBeCloseTo(3237.49, 1);
    expect(Area.Acres.toSquareMetres(5.6)).toBeCloseTo(22662.416, 1);
});

it('From Acres to Square Miles and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Acres.toSquareMiles(value)
            const convertBack = Area.SquareMiles.toAcres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Acres to Square Miles', () => {
    expect(Area.Acres.toSquareMiles(1009.0)).toBeCloseTo(1.576562, 1);
    expect(Area.Acres.toSquareMiles(90.0)).toBeCloseTo(0.140625, 1);
    expect(Area.Acres.toSquareMiles(765.0)).toBeCloseTo(1.19531, 1);
});

it('From Acres to Square Yards and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Acres.toSquareYards(value)
            const convertBack = Area.SquareYards.toAcres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Acres to Square Yards', () => {
    expect(Area.Acres.toSquareYards(3.4)).toBeCloseTo(16456.0, 1);
    expect(Area.Acres.toSquareYards(0.7)).toBeCloseTo(3388.0, 1);
    expect(Area.Acres.toSquareYards(0.01)).toBeCloseTo(48.4, 1);
});

it('From Acres to Square Feet and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Acres.toSquareFeet(value)
            const convertBack = Area.SquareFeet.toAcres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Acres to Square Feet', () => {
    expect(Area.Acres.toSquareFeet(0.01)).toBeCloseTo(435.6, 1);
    expect(Area.Acres.toSquareFeet(12.0)).toBeCloseTo(522720.0, 1);
    expect(Area.Acres.toSquareFeet(0.67)).toBeCloseTo(29185.2, 1);
});

it('From Acres to Square Inches and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Acres.toSquareInches(value)
            const convertBack = Area.SquareInches.toAcres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Acres to Square Inches', () => {
    expect(Area.Acres.toSquareInches(0.09)).toBeCloseTo(564537.6, 1);
    expect(Area.Acres.toSquareInches(0.005)).toBeCloseTo(31363.2, 1);
    expect(Area.Acres.toSquareInches(0.012)).toBeCloseTo(75271.68, 1);
});

it('From Acres to Hectares and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Acres.toHectares(value)
            const convertBack = Area.Hectares.toAcres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Acres to Hectares', () => {
    expect(Area.Acres.toHectares(1109.0)).toBeCloseTo(448.7964, 1);
    expect(Area.Acres.toHectares(5.6)).toBeCloseTo(2.26624, 1);
    expect(Area.Acres.toHectares(1.23)).toBeCloseTo(0.4977633, 1);
});

it('From Hectares to Square Kilometres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Hectares.toSquareKilometres(value)
            const convertBack = Area.SquareKilometres.toHectares(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Hectares to Square Kilometres', () => {
    expect(Area.Hectares.toSquareKilometres(15000.0)).toBeCloseTo(150.0, 1);
    expect(Area.Hectares.toSquareKilometres(300.0)).toBeCloseTo(3.0, 1);
    expect(Area.Hectares.toSquareKilometres(45.6)).toBeCloseTo(0.456, 1);
});

it('From Hectares to Square Metres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Hectares.toSquareMetres(value)
            const convertBack = Area.SquareMetres.toHectares(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Hectares to Square Metres', () => {
    expect(Area.Hectares.toSquareMetres(1.4)).toBeCloseTo(14000.0, 1);
    expect(Area.Hectares.toSquareMetres(0.9)).toBeCloseTo(9000.0, 1);
    expect(Area.Hectares.toSquareMetres(0.012)).toBeCloseTo(120.0, 1);
});

it('From Hectares to Square Miles and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Hectares.toSquareMiles(value)
            const convertBack = Area.SquareMiles.toHectares(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Hectares to Square Miles', () => {
    expect(Area.Hectares.toSquareMiles(1102.0)).toBeCloseTo(4.254846, 1);
    expect(Area.Hectares.toSquareMiles(4500.0)).toBeCloseTo(17.3746, 1);
    expect(Area.Hectares.toSquareMiles(90.0)).toBeCloseTo(0.347492, 1);
});

it('From Hectares to Square Yards and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Hectares.toSquareYards(value)
            const convertBack = Area.SquareYards.toHectares(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Hectares to Square Yards', () => {
    expect(Area.Hectares.toSquareYards(1.2)).toBeCloseTo(14351.8805556, 1);
    expect(Area.Hectares.toSquareYards(0.8)).toBeCloseTo(9567.92, 1);
    expect(Area.Hectares.toSquareYards(34.0)).toBeCloseTo(406636.615, 1);
});

it('From Hectares to Square Feet and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Hectares.toSquareFeet(value)
            const convertBack = Area.SquareFeet.toHectares(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Hectares to Square Feet', () => {
    expect(Area.Hectares.toSquareFeet(3.4)).toBeCloseTo(365972.599, 1);
    expect(Area.Hectares.toSquareFeet(0.09)).toBeCloseTo(9687.519, 1);
    expect(Area.Hectares.toSquareFeet(1.2)).toBeCloseTo(129166.7999, 1);
});

it('From Hectares to Square Inches and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Hectares.toSquareInches(value)
            const convertBack = Area.SquareInches.toHectares(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Hectares to Square Inches', () => {
    expect(Area.Hectares.toSquareInches(0.009)).toBeCloseTo(139500.28, 1);
    expect(Area.Hectares.toSquareInches(0.01)).toBeCloseTo(155000.31, 1);
    expect(Area.Hectares.toSquareInches(0.0061)).toBeCloseTo(94550.1891, 1);
});

it('From Hectares to Acres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.Hectares.toAcres(value)
            const convertBack = Area.Acres.toHectares(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Hectares to Acres', () => {
    expect(Area.Hectares.toAcres(1.2)).toBeCloseTo(2.96526, 1);
    expect(Area.Hectares.toAcres(0.8)).toBeCloseTo(1.97684, 1);
    expect(Area.Hectares.toAcres(4.2)).toBeCloseTo(10.3784, 1);
});

it('From Square Feet to Square Kilometres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareFeet.toSquareKilometres(value)
            const convertBack = Area.SquareKilometres.toSquareFeet(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Feet to Square Kilometres', () => {
    expect(Area.SquareFeet.toSquareKilometres(88997766.0)).toBeCloseTo(8.2681630146, 1);
    expect(Area.SquareFeet.toSquareKilometres(10009002.0)).toBeCloseTo(0.92986671317, 1);
    expect(Area.SquareFeet.toSquareKilometres(987654321.0)).toBeCloseTo(91.75608889, 1);
});

it('From Square Feet to Square Metres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareFeet.toSquareMetres(value)
            const convertBack = Area.SquareMetres.toSquareFeet(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Feet to Square Metres', () => {
    expect(Area.SquareFeet.toSquareMetres(900.0)).toBeCloseTo(83.6127, 1);
    expect(Area.SquareFeet.toSquareMetres(799.123)).toBeCloseTo(74.24095603, 1);
    expect(Area.SquareFeet.toSquareMetres(500.0)).toBeCloseTo(46.4515, 1);
});

it('From Square Feet to Square Miles and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareFeet.toSquareMiles(value)
            const convertBack = Area.SquareMiles.toSquareFeet(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Feet to Square Miles', () => {
    expect(Area.SquareFeet.toSquareMiles(12000000.0)).toBeCloseTo(0.43044077135, 1);
    expect(Area.SquareFeet.toSquareMiles(987654321.0)).toBeCloseTo(35.4272239799, 1);
    expect(Area.SquareFeet.toSquareMiles(900800700.0)).toBeCloseTo(32.3117790117, 1);
});

it('From Square Feet to Square Yards and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareFeet.toSquareYards(value)
            const convertBack = Area.SquareYards.toSquareFeet(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Feet to Square Yards', () => {
    expect(Area.SquareFeet.toSquareYards(909.0)).toBeCloseTo(101.0, 1);
    expect(Area.SquareFeet.toSquareYards(123.456)).toBeCloseTo(13.71733333, 1);
    expect(Area.SquareFeet.toSquareYards(8009.0)).toBeCloseTo(889.8889, 1);
});

it('From Square Feet to Square Inches and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareFeet.toSquareInches(value)
            const convertBack = Area.SquareInches.toSquareFeet(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Feet to Square Inches', () => {
    expect(Area.SquareFeet.toSquareInches(6.7)).toBeCloseTo(964.8, 1);
    expect(Area.SquareFeet.toSquareInches(1.5)).toBeCloseTo(216.0, 1);
    expect(Area.SquareFeet.toSquareInches(0.9)).toBeCloseTo(129.6, 1);
});

it('From Square Feet to Hectares and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareFeet.toHectares(value)
            const convertBack = Area.Hectares.toSquareFeet(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Feet to Hectares', () => {
    expect(Area.SquareFeet.toHectares(90000.0)).toBeCloseTo(0.83612736, 1);
    expect(Area.SquareFeet.toHectares(120120.0)).toBeCloseTo(1.11595132, 1);
    expect(Area.SquareFeet.toHectares(90071.0)).toBeCloseTo(0.83678697, 1);
});

it('From Square Feet to Acres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareFeet.toAcres(value)
            const convertBack = Area.Acres.toSquareFeet(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Feet to Acres', () => {
    expect(Area.SquareFeet.toAcres(90000.0)).toBeCloseTo(2.0661157, 1);
    expect(Area.SquareFeet.toAcres(123456.0)).toBeCloseTo(2.83415978, 1);
    expect(Area.SquareFeet.toAcres(8809.0)).toBeCloseTo(0.2022268, 1);
});

it('From Square Inches to Square Kilometres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareInches.toSquareKilometres(value)
            const convertBack = Area.SquareKilometres.toSquareInches(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Inches to Square Kilometres', () => {
    expect(Area.SquareInches.toSquareKilometres(678900000.0)).toBeCloseTo(0.437999124, 1);
    expect(Area.SquareInches.toSquareKilometres(10000000000.0)).toBeCloseTo(6.4516, 1);
    expect(Area.SquareInches.toSquareKilometres(9e12)).toBeCloseTo(5806.44, 1);
});

it('From Square Inches to Square Metres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareInches.toSquareMetres(value)
            const convertBack = Area.SquareMetres.toSquareInches(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Inches to Square Metres', () => {
    expect(Area.SquareInches.toSquareMetres(1090.0)).toBeCloseTo(0.7032244, 1);
    expect(Area.SquareInches.toSquareMetres(1.3e6)).toBeCloseTo(838.708, 1);
    expect(Area.SquareInches.toSquareMetres(9988.0)).toBeCloseTo(6.443858, 1);
});

it('From Square Inches to Square Miles and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareInches.toSquareMiles(value)
            const convertBack = Area.SquareMiles.toSquareInches(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Inches to Square Miles', () => {
    expect(Area.SquareInches.toSquareMiles(1007008000.0)).toBeCloseTo(0.2508433450668, 1);
    expect(Area.SquareInches.toSquareMiles(1.2e12)).toBeCloseTo(298.9172023262932, 1);
    expect(Area.SquareInches.toSquareMiles(250e7)).toBeCloseTo(0.6227441715131, 1);
});

it('From Square Inches to Square Yards and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareInches.toSquareYards(value)
            const convertBack = Area.SquareYards.toSquareInches(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Inches to Square Yards', () => {
    expect(Area.SquareInches.toSquareYards(900.0)).toBeCloseTo(0.694444, 1);
    expect(Area.SquareInches.toSquareYards(15000.0)).toBeCloseTo(11.574074, 1);
    expect(Area.SquareInches.toSquareYards(3e6)).toBeCloseTo(2314.814815, 1);
});

it('From Square Inches to Square Feet and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareInches.toSquareFeet(value)
            const convertBack = Area.SquareFeet.toSquareInches(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Inches to Square Feet', () => {
    expect(Area.SquareInches.toSquareFeet(34.0)).toBeCloseTo(0.236111, 1);
    expect(Area.SquareInches.toSquareFeet(1002.0)).toBeCloseTo(6.958333, 1);
    expect(Area.SquareInches.toSquareFeet(890.0)).toBeCloseTo(6.18056, 1);
});

it('From Square Inches to Hectares and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareInches.toHectares(value)
            const convertBack = Area.Hectares.toSquareInches(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Inches to Hectares', () => {
    expect(Area.SquareInches.toHectares(9000000.0)).toBeCloseTo(0.580644, 1);
    expect(Area.SquareInches.toHectares(12345678.0)).toBeCloseTo(0.79649376185, 1);
    expect(Area.SquareInches.toHectares(99887766.0)).toBeCloseTo(6.4443591113, 1);
});

it('From Square Inches to Acres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareInches.toAcres(value)
            const convertBack = Area.Acres.toSquareInches(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Inches to Acres', () => {
    expect(Area.SquareInches.toAcres(900100.0)).toBeCloseTo(0.143496199, 1);
    expect(Area.SquareInches.toAcres(5e6)).toBeCloseTo(0.7971125395, 1);
    expect(Area.SquareInches.toAcres(12345678.0)).toBeCloseTo(1.9681789486, 1);
});

it('From Square Kilometres to Square Metres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareKilometres.toSquareMetres(value)
            const convertBack = Area.SquareMetres.toSquareKilometres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Kilometres to Square Metres', () => {
    expect(Area.SquareKilometres.toSquareMetres(0.12)).toBeCloseTo(120000.0, 1);
    expect(Area.SquareKilometres.toSquareMetres(0.9)).toBeCloseTo(900000.0, 1);
    expect(Area.SquareKilometres.toSquareMetres(8.123456)).toBeCloseTo(8123456.0, 1);
});

it('From Square Kilometres to Square Miles and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareKilometres.toSquareMiles(value)
            const convertBack = Area.SquareMiles.toSquareKilometres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Kilometres to Square Miles', () => {
    expect(Area.SquareKilometres.toSquareMiles(492.098)).toBeCloseTo(190.0, 1);
    expect(Area.SquareKilometres.toSquareMiles(23.3099)).toBeCloseTo(9.0, 1);
    expect(Area.SquareKilometres.toSquareMiles(4661.979)).toBeCloseTo(1800.0, 1);
});

it('From Square Kilometres to Square Yards and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareKilometres.toSquareYards(value)
            const convertBack = Area.SquareYards.toSquareKilometres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Kilometres to Square Yards', () => {
    expect(Area.SquareKilometres.toSquareYards(0.158028071)).toBeCloseTo(189000.0005, 1);
    expect(Area.SquareKilometres.toSquareYards(8.361272764)).toBeCloseTo(9999999.0310, 1);
    expect(Area.SquareKilometres.toSquareYards(0.6)).toBeCloseTo(717594.030, 1);
});

it('From Square Kilometres to Square Feet and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareKilometres.toSquareFeet(value)
            const convertBack = Area.SquareFeet.toSquareKilometres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Kilometres to Square Feet', () => {
    expect(Area.SquareKilometres.toSquareFeet(0.009)).toBeCloseTo(96875.194, 1);
    expect(Area.SquareKilometres.toSquareFeet(0.08)).toBeCloseTo(861112.833, 1);
    expect(Area.SquareKilometres.toSquareFeet(0.123)).toBeCloseTo(1323960.9812553, 1);
});

it('From Square Kilometres to Square Inches and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareKilometres.toSquareInches(value)
            const convertBack = Area.SquareInches.toSquareKilometres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Kilometres to Square Inches', () => {
    expect(Area.SquareKilometres.toSquareInches(0.0008)).toBeCloseTo(1240002.48, 1);
    expect(Area.SquareKilometres.toSquareInches(0.00123)).toBeCloseTo(1906503.813, 1);
    expect(Area.SquareKilometres.toSquareInches(0.000045)).toBeCloseTo(69750.1395, 1);
});

it('From Square Kilometres to Hectares and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareKilometres.toHectares(value)
            const convertBack = Area.Hectares.toSquareKilometres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Kilometres to Hectares', () => {
    expect(Area.SquareKilometres.toHectares(190.0)).toBeCloseTo(19000.0, 1);
    expect(Area.SquareKilometres.toHectares(55.67)).toBeCloseTo(5567.0, 1);
    expect(Area.SquareKilometres.toHectares(0.9)).toBeCloseTo(90.0, 1);
});

it('From Square Kilometres to Acres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareKilometres.toAcres(value)
            const convertBack = Area.Acres.toSquareKilometres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Kilometres to Acres', () => {
    expect(Area.SquareKilometres.toAcres(30.393962)).toBeCloseTo(7510.4999900100, 1);
    expect(Area.SquareKilometres.toAcres(54.1)).toBeCloseTo(13368.3805, 1);
    expect(Area.SquareKilometres.toAcres(90.67)).toBeCloseTo(22405.0103, 1);
});

it('From Square Metres to Square Kilometres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMetres.toSquareKilometres(value)
            const convertBack = Area.SquareKilometres.toSquareMetres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Metres to Square Kilometres', () => {
    expect(Area.SquareMetres.toSquareKilometres(19000.0)).toBeCloseTo(0.019, 1);
    expect(Area.SquareMetres.toSquareKilometres(123456.0)).toBeCloseTo(0.123456, 1);
    expect(Area.SquareMetres.toSquareKilometres(900100.0)).toBeCloseTo(0.9001, 1);
});

it('From Square Metres to Square Miles and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMetres.toSquareMiles(value)
            const convertBack = Area.SquareMiles.toSquareMetres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Metres to Square Miles', () => {
    expect(Area.SquareMetres.toSquareMiles(190009.0)).toBeCloseTo(0.073362885, 1);
    expect(Area.SquareMetres.toSquareMiles(12345678.0)).toBeCloseTo(4.7666929245, 1);
    expect(Area.SquareMetres.toSquareMiles(777666.0)).toBeCloseTo(0.300258521, 1);
});

it('From Square Metres to Square Yards and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMetres.toSquareYards(value)
            const convertBack = Area.SquareYards.toSquareMetres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Metres to Square Yards', () => {
    expect(Area.SquareMetres.toSquareYards(5.0)).toBeCloseTo(5.97995, 1);
    expect(Area.SquareMetres.toSquareYards(1.23)).toBeCloseTo(1.471068, 1);
    expect(Area.SquareMetres.toSquareYards(700.0)).toBeCloseTo(837.193, 1);
});

it('From Square Metres to Square Feet and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMetres.toSquareFeet(value)
            const convertBack = Area.SquareFeet.toSquareMetres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Metres to Square Feet', () => {
    expect(Area.SquareMetres.toSquareFeet(90.0)).toBeCloseTo(968.7519375, 1);
    expect(Area.SquareMetres.toSquareFeet(180.0)).toBeCloseTo(1937.503875, 1);
    expect(Area.SquareMetres.toSquareFeet(123.4)).toBeCloseTo(1328.2665454, 1);
});

it('From Square Metres to Square Inches and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMetres.toSquareInches(value)
            const convertBack = Area.SquareInches.toSquareMetres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Metres to Square Inches', () => {
    expect(Area.SquareMetres.toSquareInches(8.0)).toBeCloseTo(12400.0, 1);
    expect(Area.SquareMetres.toSquareInches(1.23)).toBeCloseTo(1906.504, 1);
    expect(Area.SquareMetres.toSquareInches(0.9)).toBeCloseTo(1395.0, 1);
});

it('From Square Metres to Hectares and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMetres.toHectares(value)
            const convertBack = Area.Hectares.toSquareMetres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Metres to Hectares', () => {
    expect(Area.SquareMetres.toHectares(1234.0)).toBeCloseTo(0.1234, 1);
    expect(Area.SquareMetres.toHectares(560.9)).toBeCloseTo(0.05609, 1);
    expect(Area.SquareMetres.toHectares(100900.0)).toBeCloseTo(10.09, 1);
});

it('From Square Metres to Acres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMetres.toAcres(value)
            const convertBack = Area.Acres.toSquareMetres(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Metres to Acres', () => {
    expect(Area.SquareMetres.toAcres(986.0)).toBeCloseTo(0.243646, 1);
    expect(Area.SquareMetres.toAcres(1020.0)).toBeCloseTo(0.2520475, 1);
    expect(Area.SquareMetres.toAcres(666111.0)).toBeCloseTo(164.599613, 1);
});

it('From Square Miles to Square Kilometres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMiles.toSquareKilometres(value)
            const convertBack = Area.SquareKilometres.toSquareMiles(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Miles to Square Kilometres', () => {
    expect(Area.SquareMiles.toSquareKilometres(3.0)).toBeCloseTo(7.76996, 1);
    expect(Area.SquareMiles.toSquareKilometres(0.9)).toBeCloseTo(2.33099, 1);
    expect(Area.SquareMiles.toSquareKilometres(100.0)).toBeCloseTo(258.999, 1);
});

it('From Square Miles to Square Metres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMiles.toSquareMetres(value)
            const convertBack = Area.SquareMetres.toSquareMiles(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Miles to Square Metres', () => {
    expect(Area.SquareMiles.toSquareMetres(0.009)).toBeCloseTo(23309.893, 1);
    expect(Area.SquareMiles.toSquareMetres(0.010)).toBeCloseTo(25899.88, 1);
    expect(Area.SquareMiles.toSquareMetres(0.0006)).toBeCloseTo(1553.99287, 1);
});

it('From Square Miles to Square Yards and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMiles.toSquareYards(value)
            const convertBack = Area.SquareYards.toSquareMiles(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Miles to Square Yards', () => {
    expect(Area.SquareMiles.toSquareYards(0.01)).toBeCloseTo(30976.0, 1);
    expect(Area.SquareMiles.toSquareYards(0.00123)).toBeCloseTo(3810.048, 1);
    expect(Area.SquareMiles.toSquareYards(0.09)).toBeCloseTo(278784.0, 1);
});

it('From Square Miles to Square Feet and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMiles.toSquareFeet(value)
            const convertBack = Area.SquareFeet.toSquareMiles(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Miles to Square Feet', () => {
    expect(Area.SquareMiles.toSquareFeet(0.01)).toBeCloseTo(278784.0, 1);
    expect(Area.SquareMiles.toSquareFeet(0.005)).toBeCloseTo(139392.0, 1);
    expect(Area.SquareMiles.toSquareFeet(0.08)).toBeCloseTo(2230272.0, 1);
});

it('From Square Miles to Square Inches and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMiles.toSquareInches(value)
            const convertBack = Area.SquareInches.toSquareMiles(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Miles to Square Inches', () => {
    expect(Area.SquareMiles.toSquareInches(0.0001)).toBeCloseTo(401448.96, 1);
    expect(Area.SquareMiles.toSquareInches(0.00098)).toBeCloseTo(3934199.808, 1);
    expect(Area.SquareMiles.toSquareInches(0.000007)).toBeCloseTo(28101.4272, 1);
});

it('From Square Miles to Hectares and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMiles.toHectares(value)
            const convertBack = Area.Hectares.toSquareMiles(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Miles to Hectares', () => {
    expect(Area.SquareMiles.toHectares(100.0)).toBeCloseTo(25899.881103, 1);
    expect(Area.SquareMiles.toHectares(2.3)).toBeCloseTo(595.697, 1);
    expect(Area.SquareMiles.toHectares(0.9)).toBeCloseTo(233.099, 1);
});

it('From Square Miles to Acres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareMiles.toAcres(value)
            const convertBack = Area.Acres.toSquareMiles(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Miles to Acres', () => {
    expect(Area.SquareMiles.toAcres(2.0)).toBeCloseTo(1280.0, 1);
    expect(Area.SquareMiles.toAcres(0.1)).toBeCloseTo(64.0, 1);
    expect(Area.SquareMiles.toAcres(4.6)).toBeCloseTo(2944.0, 1);
});

it('From Square Yards to Square Kilometres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareYards.toSquareKilometres(value)
            const convertBack = Area.SquareKilometres.toSquareYards(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Yards to Square Kilometres', () => {
    expect(Area.SquareYards.toSquareKilometres(900000.0)).toBeCloseTo(0.752514624, 1);
    expect(Area.SquareYards.toSquareKilometres(190190.0)).toBeCloseTo(0.159023063, 1);
    expect(Area.SquareYards.toSquareKilometres(7000000.0)).toBeCloseTo(5.85289152, 1);
});

it('From Square Yards to Square Metres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareYards.toSquareMetres(value)
            const convertBack = Area.SquareMetres.toSquareYards(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Yards to Square Metres', () => {
    expect(Area.SquareYards.toSquareMetres(700.0)).toBeCloseTo(585.289, 1);
    expect(Area.SquareYards.toSquareMetres(12.0)).toBeCloseTo(10.0335, 1);
    expect(Area.SquareYards.toSquareMetres(9.1)).toBeCloseTo(7.60876, 1);
});

it('From Square Yards to Square Miles and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareYards.toSquareMiles(value)
            const convertBack = Area.SquareMiles.toSquareYards(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Yards to Square Miles', () => {
    expect(Area.SquareYards.toSquareMiles(98700.0)).toBeCloseTo(0.031863378, 1);
    expect(Area.SquareYards.toSquareMiles(8888888.0)).toBeCloseTo(2.869604855, 1);
    expect(Area.SquareYards.toSquareMiles(100200300.0)).toBeCloseTo(32.3477208161, 1);
});

it('From Square Yards to Square Feet and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareYards.toSquareFeet(value)
            const convertBack = Area.SquareFeet.toSquareYards(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Yards to Square Feet', () => {
    expect(Area.SquareYards.toSquareFeet(12.0)).toBeCloseTo(108.0, 1);
    expect(Area.SquareYards.toSquareFeet(5.6)).toBeCloseTo(50.4, 1);
    expect(Area.SquareYards.toSquareFeet(102.5)).toBeCloseTo(922.5, 1);
});

it('From Square Yards to Square Inches and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareYards.toSquareInches(value)
            const convertBack = Area.SquareInches.toSquareYards(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Yards to Square Inches', () => {
    expect(Area.SquareYards.toSquareInches(56.7)).toBeCloseTo(73483.2, 1);
    expect(Area.SquareYards.toSquareInches(1.8)).toBeCloseTo(2332.8, 1);
    expect(Area.SquareYards.toSquareInches(0.2)).toBeCloseTo(259.2, 1);
});

it('From Square Yards to Hectares and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareYards.toHectares(value)
            const convertBack = Area.Hectares.toSquareYards(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Yards to Hectares', () => {
    expect(Area.SquareYards.toHectares(10090.0)).toBeCloseTo(0.84365251, 1);
    expect(Area.SquareYards.toHectares(98765.0)).toBeCloseTo(8.2580119, 1);
    expect(Area.SquareYards.toHectares(3090.09)).toBeCloseTo(0.2583634, 1);
});

it('From Square Yards to Acres and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Area.SquareYards.toAcres(value)
            const convertBack = Area.Acres.toSquareYards(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Square Yards to Acres', () => {
    expect(Area.SquareYards.toAcres(1000.0)).toBeCloseTo(0.206612, 1);
    expect(Area.SquareYards.toAcres(899.0)).toBeCloseTo(0.185744, 1);
    expect(Area.SquareYards.toAcres(5678.0)).toBeCloseTo(1.17314, 1);
});

