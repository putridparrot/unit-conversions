// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

import * as fc from 'fast-check';
import { Frequency } from '../src/Frequency';

it('From Gigahertz to Hertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Gigahertz.toHertz(value)
            const convertBack = Frequency.Hertz.toGigahertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Gigahertz to Hertz', () => {
    expect(Frequency.Gigahertz.toHertz(0.009)).toBeCloseTo(9000000.0, 1);
    expect(Frequency.Gigahertz.toHertz(0.000123)).toBeCloseTo(123000.0, 1);
    expect(Frequency.Gigahertz.toHertz(0.0000456)).toBeCloseTo(45600.0, 1);
});

it('From Gigahertz to Kilohertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Gigahertz.toKilohertz(value)
            const convertBack = Frequency.Kilohertz.toGigahertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Gigahertz to Kilohertz', () => {
    expect(Frequency.Gigahertz.toKilohertz(0.009)).toBeCloseTo(9000.0, 1);
    expect(Frequency.Gigahertz.toKilohertz(1e-5)).toBeCloseTo(10.0, 1);
    expect(Frequency.Gigahertz.toKilohertz(0.000065)).toBeCloseTo(65.0, 1);
});

it('From Gigahertz to Megahertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Gigahertz.toMegahertz(value)
            const convertBack = Frequency.Megahertz.toGigahertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Gigahertz to Megahertz', () => {
    expect(Frequency.Gigahertz.toMegahertz(0.9)).toBeCloseTo(900.0, 1);
    expect(Frequency.Gigahertz.toMegahertz(0.0123)).toBeCloseTo(12.3, 1);
    expect(Frequency.Gigahertz.toMegahertz(5.0)).toBeCloseTo(5000.0, 1);
});

it('From Hertz to Kilohertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Hertz.toKilohertz(value)
            const convertBack = Frequency.Kilohertz.toHertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Hertz to Kilohertz', () => {
    expect(Frequency.Hertz.toKilohertz(800.0)).toBeCloseTo(0.8, 1);
    expect(Frequency.Hertz.toKilohertz(1506.9)).toBeCloseTo(1.5069, 1);
    expect(Frequency.Hertz.toKilohertz(5000.0)).toBeCloseTo(5.0, 1);
});

it('From Hertz to Megahertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Hertz.toMegahertz(value)
            const convertBack = Frequency.Megahertz.toHertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Hertz to Megahertz', () => {
    expect(Frequency.Hertz.toMegahertz(900009.0)).toBeCloseTo(0.900009, 1);
    expect(Frequency.Hertz.toMegahertz(160000.0)).toBeCloseTo(0.16, 1);
    expect(Frequency.Hertz.toMegahertz(888888.0)).toBeCloseTo(0.888888, 1);
});

it('From Hertz to Gigahertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Hertz.toGigahertz(value)
            const convertBack = Frequency.Gigahertz.toHertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Hertz to Gigahertz', () => {
    expect(Frequency.Hertz.toGigahertz(100900900.0)).toBeCloseTo(0.1009009, 1);
    expect(Frequency.Hertz.toGigahertz(9.0)).toBeCloseTo(9e-9, 1);
    expect(Frequency.Hertz.toGigahertz(90909090.0)).toBeCloseTo(0.09090909, 1);
});

it('From Kilohertz to Hertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Kilohertz.toHertz(value)
            const convertBack = Frequency.Hertz.toKilohertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilohertz to Hertz', () => {
    expect(Frequency.Kilohertz.toHertz(90.90909)).toBeCloseTo(90909.09, 1);
    expect(Frequency.Kilohertz.toHertz(0.12345)).toBeCloseTo(123.45, 1);
    expect(Frequency.Kilohertz.toHertz(500.0)).toBeCloseTo(500000.0, 1);
});

it('From Kilohertz to Megahertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Kilohertz.toMegahertz(value)
            const convertBack = Frequency.Megahertz.toKilohertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilohertz to Megahertz', () => {
    expect(Frequency.Kilohertz.toMegahertz(909.0)).toBeCloseTo(0.909, 1);
    expect(Frequency.Kilohertz.toMegahertz(123456.0)).toBeCloseTo(123.456, 1);
    expect(Frequency.Kilohertz.toMegahertz(900.0)).toBeCloseTo(0.9, 1);
});

it('From Kilohertz to Gigahertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Kilohertz.toGigahertz(value)
            const convertBack = Frequency.Gigahertz.toKilohertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilohertz to Gigahertz', () => {
    expect(Frequency.Kilohertz.toGigahertz(987654.0)).toBeCloseTo(0.987654, 1);
    expect(Frequency.Kilohertz.toGigahertz(10000.0)).toBeCloseTo(0.01, 1);
    expect(Frequency.Kilohertz.toGigahertz(90090.0)).toBeCloseTo(0.09009, 1);
});

it('From Megahertz to Hertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Megahertz.toHertz(value)
            const convertBack = Frequency.Hertz.toMegahertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Megahertz to Hertz', () => {
    expect(Frequency.Megahertz.toHertz(0.9)).toBeCloseTo(900000.0, 1);
    expect(Frequency.Megahertz.toHertz(0.001)).toBeCloseTo(1000.0, 1);
    expect(Frequency.Megahertz.toHertz(0.091)).toBeCloseTo(91000.0, 1);
});

it('From Megahertz to Kilohertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Megahertz.toKilohertz(value)
            const convertBack = Frequency.Kilohertz.toMegahertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Megahertz to Kilohertz', () => {
    expect(Frequency.Megahertz.toKilohertz(0.87)).toBeCloseTo(870.0, 1);
    expect(Frequency.Megahertz.toKilohertz(12.0)).toBeCloseTo(12000.0, 1);
    expect(Frequency.Megahertz.toKilohertz(88.1)).toBeCloseTo(88100.0, 1);
});

it('From Megahertz to Gigahertz and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Frequency.Megahertz.toGigahertz(value)
            const convertBack = Frequency.Gigahertz.toMegahertz(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Megahertz to Gigahertz', () => {
    expect(Frequency.Megahertz.toGigahertz(798.0)).toBeCloseTo(0.798, 1);
    expect(Frequency.Megahertz.toGigahertz(900.0)).toBeCloseTo(0.9, 1);
    expect(Frequency.Megahertz.toGigahertz(579.1)).toBeCloseTo(0.5791, 1);
});

