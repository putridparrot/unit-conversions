// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

import * as fc from 'fast-check';
import { Power } from '../src/Power';

it('From Mechanical Horse Power to Metric Horse Power and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Power.MechanicalHorsePower.toMetricHorsePower(value)
            const convertBack = Power.MetricHorsePower.toMechanicalHorsePower(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Mechanical Horse Power to Metric Horse Power', () => {
    expect(Power.MechanicalHorsePower.toMetricHorsePower(65.0971)).toBeCloseTo(65.9999749, 1);
    expect(Power.MechanicalHorsePower.toMetricHorsePower(121.317)).toBeCloseTo(122.9996, 1);
    expect(Power.MechanicalHorsePower.toMetricHorsePower(86.7962)).toBeCloseTo(88.0, 1);
});

it('From Metric Horse Power to Mechanical Horse Power and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Power.MetricHorsePower.toMechanicalHorsePower(value)
            const convertBack = Power.MechanicalHorsePower.toMetricHorsePower(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Metric Horse Power to Mechanical Horse Power', () => {
    expect(Power.MetricHorsePower.toMechanicalHorsePower(126.734)).toBeCloseTo(125.0, 1);
    expect(Power.MetricHorsePower.toMechanicalHorsePower(91.2483)).toBeCloseTo(90.0, 1);
    expect(Power.MetricHorsePower.toMechanicalHorsePower(425.825)).toBeCloseTo(419.9997, 1);
});

