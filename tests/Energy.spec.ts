// <auto-generated>
// This code was generated by the UnitCodeGenerator tool
//
// Changes to this file will be lost if the code is regenerated
// </auto-generated>

import * as fc from 'fast-check';
import { Energy } from '../src/Energy';

it('From Btu to Kilojoules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Btu.toKilojoules(value)
            const convertBack = Energy.Kilojoules.toBtu(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Btu to Kilojoules', () => {
    expect(Energy.Btu.toKilojoules(100.0)).toBeCloseTo(105.506, 1);
    expect(Energy.Btu.toKilojoules(987.65)).toBeCloseTo(1042.03, 1);
    expect(Energy.Btu.toKilojoules(555666.0)).toBeCloseTo(586258.6917293, 1);
});

it('From Btu to Kilocalories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Btu.toKilocalories(value)
            const convertBack = Energy.Kilocalories.toBtu(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Btu to Kilocalories', () => {
    expect(Energy.Btu.toKilocalories(67.9)).toBeCloseTo(17.12196, 1);
    expect(Energy.Btu.toKilocalories(109.9)).toBeCloseTo(27.7009516484, 1);
    expect(Energy.Btu.toKilocalories(5000.0)).toBeCloseTo(1260.279874814, 1);
});

it('From Btu to Joules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Btu.toJoules(value)
            const convertBack = Energy.Joules.toBtu(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Btu to Joules', () => {
    expect(Energy.Btu.toJoules(5.0)).toBeCloseTo(5275.3, 1);
    expect(Energy.Btu.toJoules(912.9)).toBeCloseTo(963164.274, 1);
    expect(Energy.Btu.toJoules(109.0)).toBeCloseTo(115001.54, 1);
});

it('From Btu to Calories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Btu.toCalories(value)
            const convertBack = Energy.Calories.toBtu(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Btu to Calories', () => {
    expect(Energy.Btu.toCalories(56.0)).toBeCloseTo(14121.184, 1);
    expect(Energy.Btu.toCalories(123.0)).toBeCloseTo(31016.172, 1);
    expect(Energy.Btu.toCalories(0.9)).toBeCloseTo(226.9476, 1);
});

it('From Btu to US Therms and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Btu.toUSTherms(value)
            const convertBack = Energy.USTherms.toBtu(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Btu to US Therms', () => {
    expect(Energy.Btu.toUSTherms(12000.0)).toBeCloseTo(0.120028657, 1);
    expect(Energy.Btu.toUSTherms(9876.5)).toBeCloseTo(0.098788586, 1);
    expect(Energy.Btu.toUSTherms(666.999)).toBeCloseTo(0.006671583, 1);
});

it('From Btu to Watt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Btu.toWattHours(value)
            const convertBack = Energy.WattHours.toBtu(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Btu to Watt Hours', () => {
    expect(Energy.Btu.toWattHours(900.0)).toBeCloseTo(263.764, 1);
    expect(Energy.Btu.toWattHours(125.7)).toBeCloseTo(36.839034, 1);
    expect(Energy.Btu.toWattHours(0.99)).toBeCloseTo(0.2901404, 1);
});

it('From Btu to Kilowatt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Btu.toKilowattHours(value)
            const convertBack = Energy.KilowattHours.toBtu(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Btu to Kilowatt Hours', () => {
    expect(Energy.Btu.toKilowattHours(9000.0)).toBeCloseTo(2.63764, 1);
    expect(Energy.Btu.toKilowattHours(12345.0)).toBeCloseTo(3.6179624, 1);
    expect(Energy.Btu.toKilowattHours(8090.8)).toBeCloseTo(2.37117941, 1);
});

it('From Btu to Foot Pounds and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Btu.toFootPounds(value)
            const convertBack = Energy.FootPounds.toBtu(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Btu to Foot Pounds', () => {
    expect(Energy.Btu.toFootPounds(189.0)).toBeCloseTo(147073.9409, 1);
    expect(Energy.Btu.toFootPounds(0.3)).toBeCloseTo(233.451, 1);
    expect(Energy.Btu.toFootPounds(2.6)).toBeCloseTo(2023.24, 1);
});

it('From Btu to Electronvolts and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Btu.toElectronvolts(value)
            const convertBack = Energy.Electronvolts.toBtu(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Btu to Electronvolts', () => {
    expect(Energy.Btu.toElectronvolts(0.0000000789)).toBeCloseTo(519567655294184.88, 1);
    expect(Energy.Btu.toElectronvolts(0.000001002)).toBeCloseTo(6598311667994592.0, 1);
    expect(Energy.Btu.toElectronvolts(0.000000001)).toBeCloseTo(6585141385224.14, 1);
});

it('From Calories to Kilojoules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Calories.toKilojoules(value)
            const convertBack = Energy.Kilojoules.toCalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Calories to Kilojoules', () => {
    expect(Energy.Calories.toKilojoules(109.0)).toBeCloseTo(0.456056, 1);
    expect(Energy.Calories.toKilojoules(12.3)).toBeCloseTo(0.0514632, 1);
    expect(Energy.Calories.toKilojoules(9876.0)).toBeCloseTo(41.32118, 1);
});

it('From Calories to Kilocalories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Calories.toKilocalories(value)
            const convertBack = Energy.Kilocalories.toCalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Calories to Kilocalories', () => {
    expect(Energy.Calories.toKilocalories(900.0)).toBeCloseTo(0.9, 1);
    expect(Energy.Calories.toKilocalories(1782.0)).toBeCloseTo(1.782, 1);
    expect(Energy.Calories.toKilocalories(900800.0)).toBeCloseTo(900.8, 1);
});

it('From Calories to Joules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Calories.toJoules(value)
            const convertBack = Energy.Joules.toCalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Calories to Joules', () => {
    expect(Energy.Calories.toJoules(98.0)).toBeCloseTo(410.032, 1);
    expect(Energy.Calories.toJoules(1.67)).toBeCloseTo(6.98728, 1);
    expect(Energy.Calories.toJoules(55.0)).toBeCloseTo(230.12, 1);
});

it('From Calories to Btu and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Calories.toBtu(value)
            const convertBack = Energy.Btu.toCalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Calories to Btu', () => {
    expect(Energy.Calories.toBtu(550.0)).toBeCloseTo(2.18112, 1);
    expect(Energy.Calories.toBtu(1234.0)).toBeCloseTo(4.893633, 1);
    expect(Energy.Calories.toBtu(900.9)).toBeCloseTo(3.5726692, 1);
});

it('From Calories to US Therms and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Calories.toUSTherms(value)
            const convertBack = Energy.USTherms.toCalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Calories to US Therms', () => {
    expect(Energy.Calories.toUSTherms(9000000.0)).toBeCloseTo(0.356995242, 1);
    expect(Energy.Calories.toUSTherms(12e6)).toBeCloseTo(0.475993657, 1);
    expect(Energy.Calories.toUSTherms(100200300.0)).toBeCloseTo(3.974558932, 1);
});

it('From Calories to Watt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Calories.toWattHours(value)
            const convertBack = Energy.WattHours.toCalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Calories to Watt Hours', () => {
    expect(Energy.Calories.toWattHours(600.0)).toBeCloseTo(0.697333, 1);
    expect(Energy.Calories.toWattHours(1234.5)).toBeCloseTo(1.43476333, 1);
    expect(Energy.Calories.toWattHours(88.7)).toBeCloseTo(0.1030891, 1);
});

it('From Calories to Kilowatt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Calories.toKilowattHours(value)
            const convertBack = Energy.KilowattHours.toCalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Calories to Kilowatt Hours', () => {
    expect(Energy.Calories.toKilowattHours(100900.0)).toBeCloseTo(0.117268222, 1);
    expect(Energy.Calories.toKilowattHours(987654.0)).toBeCloseTo(1.14787343, 1);
    expect(Energy.Calories.toKilowattHours(506012.0)).toBeCloseTo(0.588098391, 1);
});

it('From Calories to Foot Pounds and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Calories.toFootPounds(value)
            const convertBack = Energy.FootPounds.toCalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Calories to Foot Pounds', () => {
    expect(Energy.Calories.toFootPounds(123.0)).toBeCloseTo(379.573, 1);
    expect(Energy.Calories.toFootPounds(9.01)).toBeCloseTo(27.8045, 1);
    expect(Energy.Calories.toFootPounds(2.8)).toBeCloseTo(8.64069, 1);
});

it('From Calories to Electronvolts and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Calories.toElectronvolts(value)
            const convertBack = Energy.Electronvolts.toCalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Calories to Electronvolts', () => {
    expect(Energy.Calories.toElectronvolts(0.0000091)).toBeCloseTo(237800626261534.66, 1);
    expect(Energy.Calories.toElectronvolts(0.0008)).toBeCloseTo(20905549561453600.0, 1);
    expect(Energy.Calories.toElectronvolts(0.00123)).toBeCloseTo(32142282450734908.0, 1);
});

it('From Electronvolts to Kilojoules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Electronvolts.toKilojoules(value)
            const convertBack = Energy.Kilojoules.toElectronvolts(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Electronvolts to Kilojoules', () => {
    expect(Energy.Electronvolts.toKilojoules(123456789.0)).toBeCloseTo(1.9779957413e-14, 1);
    expect(Energy.Electronvolts.toKilojoules(900900900.0)).toBeCloseTo(1.4434023094e-13, 1);
    expect(Energy.Electronvolts.toKilojoules(123456789123456789.0)).toBeCloseTo(1.977995743237493669e-5, 1);
});

it('From Electronvolts to Kilocalories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Electronvolts.toKilocalories(value)
            const convertBack = Energy.Kilocalories.toElectronvolts(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Electronvolts to Kilocalories', () => {
    expect(Energy.Electronvolts.toKilocalories(100200300400.0)).toBeCloseTo(1.6053857310684e-11, 1);
    expect(Energy.Electronvolts.toKilocalories(123456789.0)).toBeCloseTo(1.9779957413e-14, 1);
    expect(Energy.Electronvolts.toKilocalories(900800700600.0)).toBeCloseTo(1.4432417722369e-10, 1);
});

it('From Electronvolts to Joules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Electronvolts.toJoules(value)
            const convertBack = Energy.Joules.toElectronvolts(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Electronvolts to Joules', () => {
    expect(Energy.Electronvolts.toJoules(123456789123.0)).toBeCloseTo(1.9779957432302e-8, 1);
    expect(Energy.Electronvolts.toJoules(900800700600.0)).toBeCloseTo(1.4432417722369e-7, 1);
    expect(Energy.Electronvolts.toJoules(999888777666.0)).toBeCloseTo(1.601998367183e-7, 1);
});

it('From Electronvolts to Btu and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Electronvolts.toBtu(value)
            const convertBack = Energy.Btu.toElectronvolts(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Electronvolts to Btu', () => {
    expect(Energy.Electronvolts.toBtu(100020003000100020003000.0)).toBeCloseTo(15.188741377060267723, 1);
    expect(Energy.Electronvolts.toBtu(999888777666999888777666.0)).toBeCloseTo(151.84014791315084381, 1);
    expect(Energy.Electronvolts.toBtu(12345678912341234567891234.0)).toBeCloseTo(1874.7782293466862029, 1);
});

it('From Electronvolts to Calories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Electronvolts.toCalories(value)
            const convertBack = Energy.Calories.toElectronvolts(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Electronvolts to Calories', () => {
    expect(Energy.Electronvolts.toCalories(666333111999.0)).toBeCloseTo(2.5515853167503e-8, 1);
    expect(Energy.Electronvolts.toCalories(999888777666555.0)).toBeCloseTo(3.8288679904011702e-5, 1);
    expect(Energy.Electronvolts.toCalories(12345678901234.0)).toBeCloseTo(4.727523282641506e-7, 1);
});

it('From Electronvolts to US Therms and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Electronvolts.toUSTherms(value)
            const convertBack = Energy.USTherms.toElectronvolts(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Electronvolts to US Therms', () => {
    expect(Energy.Electronvolts.toUSTherms(666333111999.0)).toBeCloseTo(1.0118737258101e-10, 1);
    expect(Energy.Electronvolts.toUSTherms(999888777666555.0)).toBeCloseTo(1.5184014791308327e-7, 1);
    expect(Energy.Electronvolts.toUSTherms(12345678901234.0)).toBeCloseTo(1.874778227659974e-9, 1);
});

it('From Electronvolts to Watt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Electronvolts.toWattHours(value)
            const convertBack = Energy.WattHours.toElectronvolts(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Electronvolts to Watt Hours', () => {
    expect(Energy.Electronvolts.toWattHours(100900700100.0)).toBeCloseTo(4.490576030342e-12, 1);
    expect(Energy.Electronvolts.toWattHours(9000800070006000.0)).toBeCloseTo(4.00579748289276988e-7, 1);
    expect(Energy.Electronvolts.toWattHours(12345678987654321.0)).toBeCloseTo(5.494432653620188248e-7, 1);
});

it('From Electronvolts to Kilowatt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Electronvolts.toKilowattHours(value)
            const convertBack = Energy.KilowattHours.toElectronvolts(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Electronvolts to Kilowatt Hours', () => {
    expect(Energy.Electronvolts.toKilowattHours(100900700100.0)).toBeCloseTo(4.490576030342e-15, 1);
    expect(Energy.Electronvolts.toKilowattHours(999988887777.0)).toBeCloseTo(4.4504410034909e-14, 1);
    expect(Energy.Electronvolts.toKilowattHours(12345678987654321.0)).toBeCloseTo(5.494432653620187834e-10, 1);
});

it('From Electronvolts to Foot Pounds and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Electronvolts.toFootPounds(value)
            const convertBack = Energy.FootPounds.toElectronvolts(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Electronvolts to Foot Pounds', () => {
    expect(Energy.Electronvolts.toFootPounds(100900700100.0)).toBeCloseTo(1.1923484070355e-8, 1);
    expect(Energy.Electronvolts.toFootPounds(999988887777.0)).toBeCloseTo(1.1816916594359e-7, 1);
    expect(Energy.Electronvolts.toFootPounds(12345678987654321.0)).toBeCloseTo(0.0014588948005427860004, 1);
});

it('From Foot Pounds to Kilojoules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.FootPounds.toKilojoules(value)
            const convertBack = Energy.Kilojoules.toFootPounds(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Foot Pounds to Kilojoules', () => {
    expect(Energy.FootPounds.toKilojoules(190.0)).toBeCloseTo(0.257605, 1);
    expect(Energy.FootPounds.toKilojoules(4.6)).toBeCloseTo(0.00623676, 1);
    expect(Energy.FootPounds.toKilojoules(123.8)).toBeCloseTo(0.16785026, 1);
});

it('From Foot Pounds to Kilocalories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.FootPounds.toKilocalories(value)
            const convertBack = Energy.Kilocalories.toFootPounds(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Foot Pounds to Kilocalories', () => {
    expect(Energy.FootPounds.toKilocalories(1999.0)).toBeCloseTo(0.6477725, 1);
    expect(Energy.FootPounds.toKilocalories(890.8)).toBeCloseTo(0.2886622, 1);
    expect(Energy.FootPounds.toKilocalories(12000.0)).toBeCloseTo(3.8885792, 1);
});

it('From Foot Pounds to Joules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.FootPounds.toJoules(value)
            const convertBack = Energy.Joules.toFootPounds(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Foot Pounds to Joules', () => {
    expect(Energy.FootPounds.toJoules(190.0)).toBeCloseTo(257.605, 1);
    expect(Energy.FootPounds.toJoules(23.4)).toBeCloseTo(31.72614, 1);
    expect(Energy.FootPounds.toJoules(9.2)).toBeCloseTo(12.4735, 1);
});

it('From Foot Pounds to Btu and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.FootPounds.toBtu(value)
            const convertBack = Energy.Btu.toFootPounds(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Foot Pounds to Btu', () => {
    expect(Energy.FootPounds.toBtu(9000.0)).toBeCloseTo(11.56561, 1);
    expect(Energy.FootPounds.toBtu(45.6)).toBeCloseTo(0.05859908, 1);
    expect(Energy.FootPounds.toBtu(1996.0)).toBeCloseTo(2.564995, 1);
});

it('From Foot Pounds to Calories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.FootPounds.toCalories(value)
            const convertBack = Energy.Calories.toFootPounds(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Foot Pounds to Calories', () => {
    expect(Energy.FootPounds.toCalories(123.0)).toBeCloseTo(39.8579, 1);
    expect(Energy.FootPounds.toCalories(54.7)).toBeCloseTo(17.72544, 1);
    expect(Energy.FootPounds.toCalories(109.2)).toBeCloseTo(35.386071, 1);
});

it('From Foot Pounds to US Therms and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.FootPounds.toUSTherms(value)
            const convertBack = Energy.USTherms.toFootPounds(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Foot Pounds to US Therms', () => {
    expect(Energy.FootPounds.toUSTherms(19000000.0)).toBeCloseTo(0.24422111613, 1);
    expect(Energy.FootPounds.toUSTherms(1234567.0)).toBeCloseTo(0.01586880688, 1);
    expect(Energy.FootPounds.toUSTherms(100200300.0)).toBeCloseTo(1.28794890016, 1);
});

it('From Foot Pounds to Watt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.FootPounds.toWattHours(value)
            const convertBack = Energy.WattHours.toFootPounds(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Foot Pounds to Watt Hours', () => {
    expect(Energy.FootPounds.toWattHours(44.0)).toBeCloseTo(0.0165711, 1);
    expect(Energy.FootPounds.toWattHours(9080.0)).toBeCloseTo(3.419674, 1);
    expect(Energy.FootPounds.toWattHours(1200.0)).toBeCloseTo(0.4519393, 1);
});

it('From Foot Pounds to Kilowatt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.FootPounds.toKilowattHours(value)
            const convertBack = Energy.KilowattHours.toFootPounds(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Foot Pounds to Kilowatt Hours', () => {
    expect(Energy.FootPounds.toKilowattHours(900000.0)).toBeCloseTo(0.338954487, 1);
    expect(Energy.FootPounds.toKilowattHours(100200.0)).toBeCloseTo(0.0377369329, 1);
    expect(Energy.FootPounds.toKilowattHours(9876543.0)).toBeCloseTo(3.719665074, 1);
});

it('From Foot Pounds to Electronvolts and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.FootPounds.toElectronvolts(value)
            const convertBack = Energy.Electronvolts.toFootPounds(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Foot Pounds to Electronvolts', () => {
    expect(Energy.FootPounds.toElectronvolts(0.00123)).toBeCloseTo(10408691651641586.0, 1);
    expect(Energy.FootPounds.toElectronvolts(0.0009)).toBeCloseTo(7616115842664575.0, 1);
    expect(Energy.FootPounds.toElectronvolts(0.00000888)).toBeCloseTo(75145676314290.469, 1);
});

it('From Joules to Kilojoules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Joules.toKilojoules(value)
            const convertBack = Energy.Kilojoules.toJoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Joules to Kilojoules', () => {
    expect(Energy.Joules.toKilojoules(790.0)).toBeCloseTo(0.79, 1);
    expect(Energy.Joules.toKilojoules(800100.0)).toBeCloseTo(800.1, 1);
    expect(Energy.Joules.toKilojoules(509.2)).toBeCloseTo(0.5092, 1);
});

it('From Joules to Kilocalories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Joules.toKilocalories(value)
            const convertBack = Energy.Kilocalories.toJoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Joules to Kilocalories', () => {
    expect(Energy.Joules.toKilocalories(790.0)).toBeCloseTo(0.188815, 1);
    expect(Energy.Joules.toKilocalories(125.9)).toBeCloseTo(0.030090822, 1);
    expect(Energy.Joules.toKilocalories(8000.0)).toBeCloseTo(1.912046, 1);
});

it('From Joules to Btu and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Joules.toBtu(value)
            const convertBack = Energy.Btu.toJoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Joules to Btu', () => {
    expect(Energy.Joules.toBtu(500.0)).toBeCloseTo(0.473909, 1);
    expect(Energy.Joules.toBtu(1910.0)).toBeCloseTo(1.810331, 1);
    expect(Energy.Joules.toBtu(67000.1)).toBeCloseTo(63.50384184, 1);
});

it('From Joules to Calories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Joules.toCalories(value)
            const convertBack = Energy.Calories.toJoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Joules to Calories', () => {
    expect(Energy.Joules.toCalories(67.0)).toBeCloseTo(16.0134, 1);
    expect(Energy.Joules.toCalories(909.0)).toBeCloseTo(217.256, 1);
    expect(Energy.Joules.toCalories(190.0)).toBeCloseTo(45.4111, 1);
});

it('From Joules to US Therms and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Joules.toUSTherms(value)
            const convertBack = Energy.USTherms.toJoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Joules to US Therms', () => {
    expect(Energy.Joules.toUSTherms(100090000.0)).toBeCloseTo(0.948896667059, 1);
    expect(Energy.Joules.toUSTherms(55.7e6)).toBeCloseTo(0.52806018938, 1);
    expect(Energy.Joules.toUSTherms(1234567890.0)).toBeCloseTo(11.70423974501, 1);
});

it('From Joules to Watt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Joules.toWattHours(value)
            const convertBack = Energy.WattHours.toJoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Joules to Watt Hours', () => {
    expect(Energy.Joules.toWattHours(56000.0)).toBeCloseTo(15.555556, 1);
    expect(Energy.Joules.toWattHours(890.0)).toBeCloseTo(0.247222, 1);
    expect(Energy.Joules.toWattHours(22001.0)).toBeCloseTo(6.1113889, 1);
});

it('From Joules to Kilowatt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Joules.toKilowattHours(value)
            const convertBack = Energy.KilowattHours.toJoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Joules to Kilowatt Hours', () => {
    expect(Energy.Joules.toKilowattHours(560000.8)).toBeCloseTo(0.1555557, 1);
    expect(Energy.Joules.toKilowattHours(1234567.0)).toBeCloseTo(0.3429352778, 1);
    expect(Energy.Joules.toKilowattHours(900100.0)).toBeCloseTo(0.250027778, 1);
});

it('From Joules to Foot Pounds and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Joules.toFootPounds(value)
            const convertBack = Energy.FootPounds.toJoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Joules to Foot Pounds', () => {
    expect(Energy.Joules.toFootPounds(900.0)).toBeCloseTo(663.806, 1);
    expect(Energy.Joules.toFootPounds(10.2)).toBeCloseTo(7.523134, 1);
    expect(Energy.Joules.toFootPounds(6.7)).toBeCloseTo(4.94167, 1);
});

it('From Joules to Electronvolts and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Joules.toElectronvolts(value)
            const convertBack = Energy.Electronvolts.toJoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Joules to Electronvolts', () => {
    expect(Energy.Joules.toElectronvolts(0.00000888)).toBeCloseTo(55424602968504.0, 1);
    expect(Energy.Joules.toElectronvolts(0.00001234)).toBeCloseTo(77020225296322.0, 1);
    expect(Energy.Joules.toElectronvolts(0.00000666)).toBeCloseTo(41568452226378.0, 1);
});

it('From Kilocalories to Kilojoules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilocalories.toKilojoules(value)
            const convertBack = Energy.Kilojoules.toKilocalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilocalories to Kilojoules', () => {
    expect(Energy.Kilocalories.toKilojoules(67.0)).toBeCloseTo(280.328, 1);
    expect(Energy.Kilocalories.toKilojoules(4.5)).toBeCloseTo(18.828, 1);
    expect(Energy.Kilocalories.toKilojoules(100.3)).toBeCloseTo(419.6552, 1);
});

it('From Kilocalories to Joules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilocalories.toJoules(value)
            const convertBack = Energy.Joules.toKilocalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilocalories to Joules', () => {
    expect(Energy.Kilocalories.toJoules(100.3)).toBeCloseTo(419655.2, 1);
    expect(Energy.Kilocalories.toJoules(0.9)).toBeCloseTo(3765.6, 1);
    expect(Energy.Kilocalories.toJoules(3.4)).toBeCloseTo(14225.6, 1);
});

it('From Kilocalories to Btu and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilocalories.toBtu(value)
            const convertBack = Energy.Btu.toKilocalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilocalories to Btu', () => {
    expect(Energy.Kilocalories.toBtu(3.4)).toBeCloseTo(13.4833, 1);
    expect(Energy.Kilocalories.toBtu(109.0)).toBeCloseTo(432.4436269206, 1);
    expect(Energy.Kilocalories.toBtu(22.89)).toBeCloseTo(90.8131616, 1);
});

it('From Kilocalories to Calories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilocalories.toCalories(value)
            const convertBack = Energy.Calories.toKilocalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilocalories to Calories', () => {
    expect(Energy.Kilocalories.toCalories(22.8)).toBeCloseTo(22800.0, 1);
    expect(Energy.Kilocalories.toCalories(76.23)).toBeCloseTo(76230.0, 1);
    expect(Energy.Kilocalories.toCalories(0.07)).toBeCloseTo(70.0, 1);
});

it('From Kilocalories to US Therms and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilocalories.toUSTherms(value)
            const convertBack = Energy.USTherms.toKilocalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilocalories to US Therms', () => {
    expect(Energy.Kilocalories.toUSTherms(12345.0)).toBeCloseTo(0.4896388, 1);
    expect(Energy.Kilocalories.toUSTherms(90002.0)).toBeCloseTo(3.5700317, 1);
    expect(Energy.Kilocalories.toUSTherms(180180.0)).toBeCloseTo(7.14704457, 1);
});

it('From Kilocalories to Watt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilocalories.toWattHours(value)
            const convertBack = Energy.WattHours.toKilocalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilocalories to Watt Hours', () => {
    expect(Energy.Kilocalories.toWattHours(89.0)).toBeCloseTo(103.438, 1);
    expect(Energy.Kilocalories.toWattHours(23.6)).toBeCloseTo(27.42844, 1);
    expect(Energy.Kilocalories.toWattHours(0.9)).toBeCloseTo(1.046, 1);
});

it('From Kilocalories to Kilowatt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilocalories.toKilowattHours(value)
            const convertBack = Energy.KilowattHours.toKilocalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilocalories to Kilowatt Hours', () => {
    expect(Energy.Kilocalories.toKilowattHours(456.0)).toBeCloseTo(0.529973, 1);
    expect(Energy.Kilocalories.toKilowattHours(1090.8)).toBeCloseTo(1.267752, 1);
    expect(Energy.Kilocalories.toKilowattHours(567.1)).toBeCloseTo(0.65909622, 1);
});

it('From Kilocalories to Foot Pounds and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilocalories.toFootPounds(value)
            const convertBack = Energy.FootPounds.toKilocalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilocalories to Foot Pounds', () => {
    expect(Energy.Kilocalories.toFootPounds(109.0)).toBeCloseTo(336369.64, 1);
    expect(Energy.Kilocalories.toFootPounds(0.5)).toBeCloseTo(1542.98, 1);
    expect(Energy.Kilocalories.toFootPounds(2.4)).toBeCloseTo(7406.3, 1);
});

it('From Kilocalories to Electronvolts and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilocalories.toElectronvolts(value)
            const convertBack = Energy.Electronvolts.toKilocalories(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilocalories to Electronvolts', () => {
    expect(Energy.Kilocalories.toElectronvolts(0.0000000666)).toBeCloseTo(1740388069688132.2, 1);
    expect(Energy.Kilocalories.toElectronvolts(0.000002)).toBeCloseTo(52263905996640608.0, 1);
    expect(Energy.Kilocalories.toElectronvolts(0.000000999)).toBeCloseTo(26105821045321988.0, 1);
});

it('From Kilojoules to Kilocalories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilojoules.toKilocalories(value)
            const convertBack = Energy.Kilocalories.toKilojoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilojoules to Kilocalories', () => {
    expect(Energy.Kilojoules.toKilocalories(199.0)).toBeCloseTo(47.5621, 1);
    expect(Energy.Kilojoules.toKilocalories(0.67)).toBeCloseTo(0.1601338, 1);
    expect(Energy.Kilojoules.toKilocalories(4.7)).toBeCloseTo(1.12333, 1);
});

it('From Kilojoules to Joules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilojoules.toJoules(value)
            const convertBack = Energy.Joules.toKilojoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilojoules to Joules', () => {
    expect(Energy.Kilojoules.toJoules(4.7)).toBeCloseTo(4700.0, 1);
    expect(Energy.Kilojoules.toJoules(7.8)).toBeCloseTo(7800.0, 1);
    expect(Energy.Kilojoules.toJoules(1800.0)).toBeCloseTo(1800000.0, 1);
});

it('From Kilojoules to Btu and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilojoules.toBtu(value)
            const convertBack = Energy.Btu.toKilojoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilojoules to Btu', () => {
    expect(Energy.Kilojoules.toBtu(1800.0)).toBeCloseTo(1706.070, 1);
    expect(Energy.Kilojoules.toBtu(1.4)).toBeCloseTo(1.32694, 1);
    expect(Energy.Kilojoules.toBtu(89.2)).toBeCloseTo(84.54529, 1);
});

it('From Kilojoules to Calories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilojoules.toCalories(value)
            const convertBack = Energy.Calories.toKilojoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilojoules to Calories', () => {
    expect(Energy.Kilojoules.toCalories(67.0)).toBeCloseTo(16013.381899, 1);
    expect(Energy.Kilojoules.toCalories(1.4)).toBeCloseTo(334.608, 1);
    expect(Energy.Kilojoules.toCalories(87.0)).toBeCloseTo(20793.5, 1);
});

it('From Kilojoules to US Therms and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilojoules.toUSTherms(value)
            const convertBack = Energy.USTherms.toKilojoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilojoules to US Therms', () => {
    expect(Energy.Kilojoules.toUSTherms(123456.0)).toBeCloseTo(1.17041649, 1);
    expect(Energy.Kilojoules.toUSTherms(88000.0)).toBeCloseTo(0.83427822, 1);
    expect(Energy.Kilojoules.toUSTherms(9000.0)).toBeCloseTo(0.08532391, 1);
});

it('From Kilojoules to Watt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilojoules.toWattHours(value)
            const convertBack = Energy.WattHours.toKilojoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilojoules to Watt Hours', () => {
    expect(Energy.Kilojoules.toWattHours(98000.0)).toBeCloseTo(27222.222, 1);
    expect(Energy.Kilojoules.toWattHours(1.5)).toBeCloseTo(0.416667, 1);
    expect(Energy.Kilojoules.toWattHours(67.9)).toBeCloseTo(18.86111, 1);
});

it('From Kilojoules to Kilowatt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilojoules.toKilowattHours(value)
            const convertBack = Energy.KilowattHours.toKilojoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilojoules to Kilowatt Hours', () => {
    expect(Energy.Kilojoules.toKilowattHours(8000.0)).toBeCloseTo(2.222222, 1);
    expect(Energy.Kilojoules.toKilowattHours(67.99)).toBeCloseTo(0.018886111, 1);
    expect(Energy.Kilojoules.toKilowattHours(406.8)).toBeCloseTo(0.113, 1);
});

it('From Kilojoules to Foot Pounds and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilojoules.toFootPounds(value)
            const convertBack = Energy.FootPounds.toKilojoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilojoules to Foot Pounds', () => {
    expect(Energy.Kilojoules.toFootPounds(100.9)).toBeCloseTo(74420.00579, 1);
    expect(Energy.Kilojoules.toFootPounds(2.4)).toBeCloseTo(1770.15, 1);
    expect(Energy.Kilojoules.toFootPounds(0.9)).toBeCloseTo(663.806, 1);
});

it('From Kilojoules to Electronvolts and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.Kilojoules.toElectronvolts(value)
            const convertBack = Energy.Electronvolts.toKilojoules(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilojoules to Electronvolts', () => {
    expect(Energy.Kilojoules.toElectronvolts(0.000000999)).toBeCloseTo(6235268234766989.0, 1);
    expect(Energy.Kilojoules.toElectronvolts(0.0000002)).toBeCloseTo(1248301948902300.0, 1);
    expect(Energy.Kilojoules.toElectronvolts(0.00567)).toBeCloseTo(3.5389360251380204E+19, 1);
});

it('From Kilowatt Hours to Kilojoules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.KilowattHours.toKilojoules(value)
            const convertBack = Energy.Kilojoules.toKilowattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilowatt Hours to Kilojoules', () => {
    expect(Energy.KilowattHours.toKilojoules(0.6)).toBeCloseTo(2160.0, 1);
    expect(Energy.KilowattHours.toKilojoules(134.0)).toBeCloseTo(482400.0, 1);
    expect(Energy.KilowattHours.toKilojoules(45.6)).toBeCloseTo(164160.0, 1);
});

it('From Kilowatt Hours to Kilocalories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.KilowattHours.toKilocalories(value)
            const convertBack = Energy.Kilocalories.toKilowattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilowatt Hours to Kilocalories', () => {
    expect(Energy.KilowattHours.toKilocalories(45.6)).toBeCloseTo(39235.1976, 1);
    expect(Energy.KilowattHours.toKilocalories(12.0)).toBeCloseTo(10325.052, 1);
    expect(Energy.KilowattHours.toKilocalories(0.4)).toBeCloseTo(344.168, 1);
});

it('From Kilowatt Hours to Joules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.KilowattHours.toJoules(value)
            const convertBack = Energy.Joules.toKilowattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilowatt Hours to Joules', () => {
    expect(Energy.KilowattHours.toJoules(0.01)).toBeCloseTo(36000.0, 1);
    expect(Energy.KilowattHours.toJoules(0.009)).toBeCloseTo(32400.0, 1);
    expect(Energy.KilowattHours.toJoules(2.0)).toBeCloseTo(7.2e+6, 1);
});

it('From Kilowatt Hours to Btu and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.KilowattHours.toBtu(value)
            const convertBack = Energy.Btu.toKilowattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilowatt Hours to Btu', () => {
    expect(Energy.KilowattHours.toBtu(2.0)).toBeCloseTo(6824.28, 1);
    expect(Energy.KilowattHours.toBtu(0.7)).toBeCloseTo(2388.4979, 1);
    expect(Energy.KilowattHours.toBtu(0.02)).toBeCloseTo(68.24283, 1);
});

it('From Kilowatt Hours to Calories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.KilowattHours.toCalories(value)
            const convertBack = Energy.Calories.toKilowattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilowatt Hours to Calories', () => {
    expect(Energy.KilowattHours.toCalories(0.1)).toBeCloseTo(86042.1, 1);
    expect(Energy.KilowattHours.toCalories(0.07)).toBeCloseTo(60229.47, 1);
    expect(Energy.KilowattHours.toCalories(0.0123)).toBeCloseTo(10583.174, 1);
});

it('From Kilowatt Hours to US Therms and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.KilowattHours.toUSTherms(value)
            const convertBack = Energy.USTherms.toKilowattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilowatt Hours to US Therms', () => {
    expect(Energy.KilowattHours.toUSTherms(5.0)).toBeCloseTo(0.170648, 1);
    expect(Energy.KilowattHours.toUSTherms(234.0)).toBeCloseTo(7.98632, 1);
    expect(Energy.KilowattHours.toUSTherms(1001.0)).toBeCloseTo(34.16369, 1);
});

it('From Kilowatt Hours to Watt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.KilowattHours.toWattHours(value)
            const convertBack = Energy.WattHours.toKilowattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilowatt Hours to Watt Hours', () => {
    expect(Energy.KilowattHours.toWattHours(123.0)).toBeCloseTo(123000.0, 1);
    expect(Energy.KilowattHours.toWattHours(98.4)).toBeCloseTo(98400.0, 1);
    expect(Energy.KilowattHours.toWattHours(1.6)).toBeCloseTo(1600.0, 1);
});

it('From Kilowatt Hours to Foot Pounds and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.KilowattHours.toFootPounds(value)
            const convertBack = Energy.FootPounds.toKilowattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilowatt Hours to Foot Pounds', () => {
    expect(Energy.KilowattHours.toFootPounds(0.001)).toBeCloseTo(2655.196219, 1);
    expect(Energy.KilowattHours.toFootPounds(0.09)).toBeCloseTo(238967.6597, 1);
    expect(Energy.KilowattHours.toFootPounds(0.0006)).toBeCloseTo(1593.1177314, 1);
});

it('From Kilowatt Hours to Electronvolts and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.KilowattHours.toElectronvolts(value)
            const convertBack = Energy.Electronvolts.toKilowattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Kilowatt Hours to Electronvolts', () => {
    expect(Energy.KilowattHours.toElectronvolts(0.000008)).toBeCloseTo(179755440000000000000.0, 1);
    expect(Energy.KilowattHours.toElectronvolts(0.0000000128)).toBeCloseTo(2.8760870400000003E+17, 1);
    expect(Energy.KilowattHours.toElectronvolts(0.0000000001)).toBeCloseTo(2246943000000000.2, 1);
});

it('From US Therms to Kilojoules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.USTherms.toKilojoules(value)
            const convertBack = Energy.Kilojoules.toUSTherms(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known US Therms to Kilojoules', () => {
    expect(Energy.USTherms.toKilojoules(0.009)).toBeCloseTo(949.3236, 1);
    expect(Energy.USTherms.toKilojoules(3.0)).toBeCloseTo(316440.12, 1);
    expect(Energy.USTherms.toKilojoules(1.9)).toBeCloseTo(200412.075, 1);
});

it('From US Therms to Kilocalories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.USTherms.toKilocalories(value)
            const convertBack = Energy.Kilocalories.toUSTherms(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known US Therms to Kilocalories', () => {
    expect(Energy.USTherms.toKilocalories(1.1)).toBeCloseTo(27731.44, 1);
    expect(Energy.USTherms.toKilocalories(0.04)).toBeCloseTo(1008.417, 1);
    expect(Energy.USTherms.toKilocalories(0.0123)).toBeCloseTo(310.088174, 1);
});

it('From US Therms to Joules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.USTherms.toJoules(value)
            const convertBack = Energy.Joules.toUSTherms(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known US Therms to Joules', () => {
    expect(Energy.USTherms.toJoules(0.008)).toBeCloseTo(843843.2, 1);
    expect(Energy.USTherms.toJoules(3.4e-6)).toBeCloseTo(358.633, 1);
    expect(Energy.USTherms.toJoules(0.00678)).toBeCloseTo(715157.112, 1);
});

it('From US Therms to Btu and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.USTherms.toBtu(value)
            const convertBack = Energy.Btu.toUSTherms(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known US Therms to Btu', () => {
    expect(Energy.USTherms.toBtu(0.00666)).toBeCloseTo(665.8409891, 1);
    expect(Energy.USTherms.toBtu(2.0)).toBeCloseTo(199952.249, 1);
    expect(Energy.USTherms.toBtu(0.9)).toBeCloseTo(89978.51204, 1);
});

it('From US Therms to Calories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.USTherms.toCalories(value)
            const convertBack = Energy.Calories.toUSTherms(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known US Therms to Calories', () => {
    expect(Energy.USTherms.toCalories(0.003)).toBeCloseTo(75631.262, 1);
    expect(Energy.USTherms.toCalories(6.8e-3)).toBeCloseTo(171430.856, 1);
    expect(Energy.USTherms.toCalories(0.0008)).toBeCloseTo(20168.3365, 1);
});

it('From US Therms to Watt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.USTherms.toWattHours(value)
            const convertBack = Energy.WattHours.toUSTherms(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known US Therms to Watt Hours', () => {
    expect(Energy.USTherms.toWattHours(6.0)).toBeCloseTo(175800.59, 1);
    expect(Energy.USTherms.toWattHours(1.9)).toBeCloseTo(55670.189, 1);
    expect(Energy.USTherms.toWattHours(0.07)).toBeCloseTo(2051.008, 1);
});

it('From US Therms to Kilowatt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.USTherms.toKilowattHours(value)
            const convertBack = Energy.KilowattHours.toUSTherms(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known US Therms to Kilowatt Hours', () => {
    expect(Energy.USTherms.toKilowattHours(0.9)).toBeCloseTo(26.3701, 1);
    expect(Energy.USTherms.toKilowattHours(7.9)).toBeCloseTo(231.471, 1);
    expect(Energy.USTherms.toKilowattHours(1.4)).toBeCloseTo(41.0202, 1);
});

it('From US Therms to Foot Pounds and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.USTherms.toFootPounds(value)
            const convertBack = Energy.FootPounds.toUSTherms(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known US Therms to Foot Pounds', () => {
    expect(Energy.USTherms.toFootPounds(0.009)).toBeCloseTo(700352.43389267, 1);
    expect(Energy.USTherms.toFootPounds(0.02)).toBeCloseTo(1556338.74198, 1);
    expect(Energy.USTherms.toFootPounds(0.0003)).toBeCloseTo(23345.081129, 1);
});

it('From US Therms to Electronvolts and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.USTherms.toElectronvolts(value)
            const convertBack = Energy.Electronvolts.toUSTherms(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known US Therms to Electronvolts', () => {
    expect(Energy.USTherms.toElectronvolts(0.0000009)).toBeCloseTo(592520940098199000000.0, 1);
    expect(Energy.USTherms.toElectronvolts(0.000000001339)).toBeCloseTo(8.815394875460983E+17, 1);
    expect(Energy.USTherms.toElectronvolts(0.0000000000666)).toBeCloseTo(43846549567266728.0, 1);
});

it('From Watt Hours to Kilojoules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.WattHours.toKilojoules(value)
            const convertBack = Energy.Kilojoules.toWattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Watt Hours to Kilojoules', () => {
    expect(Energy.WattHours.toKilojoules(1.6)).toBeCloseTo(5.76, 1);
    expect(Energy.WattHours.toKilojoules(67.0)).toBeCloseTo(241.2, 1);
    expect(Energy.WattHours.toKilojoules(8.12)).toBeCloseTo(29.232, 1);
});

it('From Watt Hours to Kilocalories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.WattHours.toKilocalories(value)
            const convertBack = Energy.Kilocalories.toWattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Watt Hours to Kilocalories', () => {
    expect(Energy.WattHours.toKilocalories(8.12)).toBeCloseTo(6.986616, 1);
    expect(Energy.WattHours.toKilocalories(170.0)).toBeCloseTo(146.272, 1);
    expect(Energy.WattHours.toKilocalories(19.2)).toBeCloseTo(16.52008, 1);
});

it('From Watt Hours to Joules and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.WattHours.toJoules(value)
            const convertBack = Energy.Joules.toWattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Watt Hours to Joules', () => {
    expect(Energy.WattHours.toJoules(6.7)).toBeCloseTo(24120.0, 1);
    expect(Energy.WattHours.toJoules(12.34)).toBeCloseTo(44424.0, 1);
    expect(Energy.WattHours.toJoules(0.09)).toBeCloseTo(324.0, 1);
});

it('From Watt Hours to Btu and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.WattHours.toBtu(value)
            const convertBack = Energy.Btu.toWattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Watt Hours to Btu', () => {
    expect(Energy.WattHours.toBtu(34.0)).toBeCloseTo(116.013, 1);
    expect(Energy.WattHours.toBtu(179.2)).toBeCloseTo(611.45578, 1);
    expect(Energy.WattHours.toBtu(0.9)).toBeCloseTo(3.07093, 1);
});

it('From Watt Hours to Calories and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.WattHours.toCalories(value)
            const convertBack = Energy.Calories.toWattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Watt Hours to Calories', () => {
    expect(Energy.WattHours.toCalories(0.2)).toBeCloseTo(172.084, 1);
    expect(Energy.WattHours.toCalories(0.09)).toBeCloseTo(77.43786, 1);
    expect(Energy.WattHours.toCalories(12.0)).toBeCloseTo(10325.06754, 1);
});

it('From Watt Hours to US Therms and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.WattHours.toUSTherms(value)
            const convertBack = Energy.USTherms.toWattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Watt Hours to US Therms', () => {
    expect(Energy.WattHours.toUSTherms(1090.0)).toBeCloseTo(0.03720122, 1);
    expect(Energy.WattHours.toUSTherms(49990.0)).toBeCloseTo(1.7061369, 1);
    expect(Energy.WattHours.toUSTherms(900800.0)).toBeCloseTo(30.7439107, 1);
});

it('From Watt Hours to Kilowatt Hours and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.WattHours.toKilowattHours(value)
            const convertBack = Energy.KilowattHours.toWattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Watt Hours to Kilowatt Hours', () => {
    expect(Energy.WattHours.toKilowattHours(98.0)).toBeCloseTo(0.098, 1);
    expect(Energy.WattHours.toKilowattHours(12.5)).toBeCloseTo(0.0125, 1);
    expect(Energy.WattHours.toKilowattHours(0.6)).toBeCloseTo(0.0006, 1);
});

it('From Watt Hours to Foot Pounds and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.WattHours.toFootPounds(value)
            const convertBack = Energy.FootPounds.toWattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Watt Hours to Foot Pounds', () => {
    expect(Energy.WattHours.toFootPounds(1.5)).toBeCloseTo(3982.829, 1);
    expect(Energy.WattHours.toFootPounds(0.3)).toBeCloseTo(796.567, 1);
    expect(Energy.WattHours.toFootPounds(90.1)).toBeCloseTo(239235.3219, 1);
});

it('From Watt Hours to Electronvolts and back', () => {
    fc.assert(
        fc.property(fc.float(), value => {
            const convertTo = Energy.WattHours.toElectronvolts(value)
            const convertBack = Energy.Electronvolts.toWattHours(convertTo)

            expect(convertBack).toBeCloseTo(convertBack, 1);
        })
    )
});

it('Convert known Watt Hours to Electronvolts', () => {
    expect(Energy.WattHours.toElectronvolts(0.0000000000666)).toBeCloseTo(1496463565615.39, 1);
    expect(Energy.WattHours.toElectronvolts(0.000000008)).toBeCloseTo(179755383257104.03, 1);
    expect(Energy.WattHours.toElectronvolts(0.0000123)).toBeCloseTo(2.7637390175779744E+17, 1);
});

